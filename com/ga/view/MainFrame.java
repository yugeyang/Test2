/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.ga.view;

import com.ga.code.Algorithm;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrator
 */
public class MainFrame extends javax.swing.JFrame {
    private List<String> paramList;//定义参数与解空间生成写参数集
    
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        paramList = new ArrayList<String>();//输入求解参数集
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTotalParams = new javax.swing.JTextArea();
        jtParamVals = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtParamName = new javax.swing.JTextField();
        jbAdd = new javax.swing.JButton();
        jbNext1 = new javax.swing.JButton();
        jbReset1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jtPopSize = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtMaxTimes = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtMatuteRatio = new javax.swing.JTextField();
        jtCrossRatio = new javax.swing.JTextField();
        jtJudgeTimes = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jbReset2 = new javax.swing.JButton();
        jbOK1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtResult = new javax.swing.JTextArea();
        jbOutput = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmInport = new javax.swing.JMenuItem();
        jmExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(757, 627));
        setResizable(false);

        jtTotalParams.setColumns(20);
        jtTotalParams.setRows(5);
        jScrollPane1.setViewportView(jtTotalParams);

        jLabel2.setText("参数名");

        jLabel3.setText("参数值");

        jbAdd.setText("添加参数");
        jbAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddActionPerformed(evt);
            }
        });

        jbNext1.setText("下一步");
        jbNext1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNext1ActionPerformed(evt);
            }
        });

        jbReset1.setText("重置");
        jbReset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbReset1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jbAdd)
                        .addGap(63, 63, 63)
                        .addComponent(jbReset1)
                        .addGap(76, 76, 76)
                        .addComponent(jbNext1))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jtParamName, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jtParamVals, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGap(45, 45, 45)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtParamName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtParamVals, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAdd)
                    .addComponent(jbNext1)
                    .addComponent(jbReset1))
                .addGap(25, 25, 25))
        );

        jTabbedPane1.addTab("1:输入参数数据集", jPanel1);

        jLabel5.setText("算法参数设置：");

        jLabel6.setText("初始种子数：");

        jLabel9.setText("最大迭代次数：");

        jLabel8.setText("变异率：");

        jLabel7.setText("交叉率：");

        jtMatuteRatio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtMatuteRatioActionPerformed(evt);
            }
        });

        jLabel10.setText("稳定迭代数：");

        jbReset2.setText("重置");
        jbReset2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbReset2ActionPerformed(evt);
            }
        });

        jbOK1.setText("执行算法");
        jbOK1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbOK1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(136, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(59, 59, 59))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addGap(40, 40, 40)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtCrossRatio, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtPopSize, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jtMaxTimes, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtMatuteRatio, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtJudgeTimes, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jbOK1)
                        .addGap(18, 18, 18)
                        .addComponent(jbReset2)))
                .addGap(204, 204, 204))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel5)
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtPopSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtCrossRatio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jtMatuteRatio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtMaxTimes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jtJudgeTimes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jLabel10)))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbReset2)
                    .addComponent(jbOK1))
                .addGap(97, 97, 97))
        );

        jTabbedPane1.addTab("2:算法参数设置", jPanel2);

        jtResult.setColumns(20);
        jtResult.setRows(5);
        jScrollPane2.setViewportView(jtResult);

        jbOutput.setText("导出数据");
        jbOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbOutputActionPerformed(evt);
            }
        });

        jLabel4.setText("用例生成结果：");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel4))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jbOutput)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(94, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jbOutput)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("3:测试用例集", jPanel3);

        jLabel1.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        jLabel1.setText("组合测试用例数据构造界面");

        jMenu1.setText("操作");

        jmInport.setText("导入参数测试数据");
        jmInport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmInportActionPerformed(evt);
            }
        });
        jMenu1.add(jmInport);

        jmExit.setText("退出");
        jmExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmExitActionPerformed(evt);
            }
        });
        jMenu1.add(jmExit);

        jMenuBar.add(jMenu1);

        jMenu2.setText("帮助");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });
        jMenuBar.add(jMenu2);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
       HelpFrame hf = new HelpFrame();
       hf.show();
    }//GEN-LAST:event_jMenu2ActionPerformed

    /**
     * 输出结果
     * @param evt 
     */
    private void jbOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbOutputActionPerformed
        try {
            // TODO add your handling code here:
//         String paramName = jtParamName.getText().toString();
//        String paramVals = jtParamVals.getText().toString();
//        jtTotalParams.setText(jtTotalParams.getText().trim() + "\n" + paramName + ":" + paramVals);
//        jtParamName.setText("");
//        jtParamVals.setText
            if(jtResult.getText().trim().equals("")) {
               JOptionPane.showMessageDialog(null, "没有要导出的数据!", "提示",JOptionPane.INFORMATION_MESSAGE); 
               return;
            }
            Long time = System.currentTimeMillis();
            String outPutFileName = "/组合测试"+ time + ".txt";
            FileWriter fw = new FileWriter(System.getProperty("user.dir") + outPutFileName);
            //导出输入参数
            String inPutStr =  jtTotalParams.getText();
            fw.write("输入组合参数值列表：\r\n\t" );
            for(String str: inPutStr.split("\n"))
            {
                fw.write(str + "\r\n\t");
            }
            fw.write("\r\n遗传算法参数：\r\n\t初始种群大小： " +  jtPopSize.getText() + "\r\n\t交叉率： " + jtCrossRatio.getText() + "\r\n\t变异率： " +jtMatuteRatio.getText() + "\r\n\t最大迭代次数： " + jtMaxTimes.getText() + "\r\n\t稳定结束次数：" + jtJudgeTimes.getText() + "\r\n\r\n");
            
            fw.write("输出测试用例集：");
            String outPutStr = jtResult.getText();
             for(String str: outPutStr.split("\n"))
            {
                fw.write("\r\n\t" + str);
            }
            fw.flush();
             JOptionPane.showMessageDialog(null, "文件导出成功!", "提示",JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception e) {
             JOptionPane.showMessageDialog(null, "结果导出出错!", "提示",JOptionPane.INFORMATION_MESSAGE);
        }
        
        
    }//GEN-LAST:event_jbOutputActionPerformed

    private void jbReset2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbReset2ActionPerformed
        // TODO add your handling code here:
        jtPopSize.setText("");
        jtCrossRatio.setText("");
        jtMatuteRatio.setText("");
        jtMaxTimes.setText("");
        jtJudgeTimes.setText("");
    }//GEN-LAST:event_jbReset2ActionPerformed

    private void jtMatuteRatioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtMatuteRatioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtMatuteRatioActionPerformed

    private void jbAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAddActionPerformed
        String paramName = jtParamName.getText().trim().toString();
        if(paramName.equals("")) {
            JOptionPane.showMessageDialog(null, "请输入参数名!", "提示",JOptionPane.INFORMATION_MESSAGE); 
            return;
        }
        String paramVals = jtParamVals.getText().trim().toString();
        if(paramVals.equals("")) {
            JOptionPane.showMessageDialog(null, "请输入参数的解空间!", "提示",JOptionPane.INFORMATION_MESSAGE); 
            return;
        }
        if(!jtTotalParams.getText().trim().equals("")) {
              jtTotalParams.setText(jtTotalParams.getText().trim() + "\n" + paramName + ":" + paramVals);
        }
        else {
            jtTotalParams.setText(paramName + ":" + paramVals);
         }
        jtParamName.setText("");
        jtParamVals.setText("");
    }//GEN-LAST:event_jbAddActionPerformed

    private void jbNext1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNext1ActionPerformed
        // TODO add your handling code here:
         //判断是否输入参数和解空间数据
        if(jtTotalParams.getText().trim().equals("")) {
             JOptionPane.showMessageDialog(null, "请输入参数数据!", "提示",JOptionPane.INFORMATION_MESSAGE); 
            return;
        }
//         String params[] = jtTotalParams.getText().split("\n");
//       
//        for(String param: params) {
//            paramList.add(param);
//        }
       jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_jbNext1ActionPerformed

    private void jbOK1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbOK1ActionPerformed
        // TODO add your handling code here:
          Map paramMap = new HashMap();//定义传入参数
        double crossRatio = 0.0;
        double mutaRatio = 0.0;
        int iterLimits = 0;
        int judgeTimes = 0;
        int popuSize = 0;
        try {
            paramList.clear();
        
        try {
          crossRatio = Double.parseDouble(jtCrossRatio.getText().trim()); 
          mutaRatio  = Double.parseDouble(jtMatuteRatio.getText().trim()); 
          iterLimits = Integer.parseInt(jtMaxTimes.getText().trim());
          judgeTimes = Integer.parseInt(jtJudgeTimes.getText().trim());
          popuSize = Integer.parseInt(jtPopSize.getText().trim());
          if(popuSize > 200 || popuSize < 5) {
              JOptionPane.showMessageDialog(null, "请设置种群初始个体数在合理范围内(5~200)!", "提示",JOptionPane.INFORMATION_MESSAGE); 
              return;
          }
          if(crossRatio < 0.5 || crossRatio > 0.9) {
              JOptionPane.showMessageDialog(null, "请设置合理的个体交叉率过小(0.5~0.9)!", "提示",JOptionPane.INFORMATION_MESSAGE); 
              return;
          }
          if(mutaRatio > 0.1  || mutaRatio < 0.00001) {
              JOptionPane.showMessageDialog(null, "请设置合理的基因变异率(0~0.1)!", "提示",JOptionPane.INFORMATION_MESSAGE); 
              return;
          }
           if(iterLimits <0 || iterLimits > 5000) {
              JOptionPane.showMessageDialog(null, "设置合理的最大迭代次数(1~5000)之间!", "提示",JOptionPane.INFORMATION_MESSAGE); 
              return; 
          }
          if(judgeTimes <0 || judgeTimes > iterLimits) {
              JOptionPane.showMessageDialog(null, "请设置合理的稳定结束次数(1~"+ iterLimits+")之间!", "提示",JOptionPane.INFORMATION_MESSAGE); 
              return; 
          }
        }
        catch(Exception e) {
           JOptionPane.showMessageDialog(null, "输入参数存在类型错误非或算法参数输入不完整!", "提示",JOptionPane.INFORMATION_MESSAGE);  
           return;  
        }
        String inPutStr =  jtTotalParams.getText();
            for(String str: inPutStr.split("\n"))
            {
                paramList.add(str);
            }
        paramMap.put("popuSize", popuSize);
	paramMap.put("mutaRatio", mutaRatio);
	paramMap.put("crossRatio", crossRatio);
	paramMap.put("iterLimits", iterLimits);
        paramMap.put("judgeTimes", judgeTimes);
        
//        paramMap.put("popuSize", 20);
//	paramMap.put("mutaRatio", 0.02);
//	paramMap.put("crossRatio", 0.83);
//	paramMap.put("iterLimits", 50);
//        paramMap.put("judgeTimes", 1);
//        paramList.clear();
//        String str1 = "A:A1 A2 A3 A4 A5 A6 A7 A8";
//	String str2 = "B:B1 B2 B3 B4 B5 B6 B7 B8";
//	String str3 = "C:C1 C2 C3 C4 C5 C6 C7 C8";
//        String str4 = "D:D1 D2 D3";
//        String str5 = "E:E1 E2 E3";
//        String str6 = "F:F1 F2 F3 F4";
//        String str7 = "G:G1 G2 G3";
//        String str1 = "浏览器:IE Mozilla";
//	String str2 = "操作系统:Windows Linux";
//	String str3 = "网络连接:LAN PPP IDNS";
//        String str4 = "打印配置:Local NetWork SCren";
//	paramList.add(str1);
//	paramList.add(str2);
//	paramList.add(str3);
//        paramList.add(str4);
//        paramList.add(str5);
//        paramList.add(str6);
//        paramList.add(str7);
       
	
        paramMap.put("paramList", paramList);
        Algorithm al = new Algorithm();//定义算法运行入口
        List<String> resultList = al.run(paramMap);
        if(resultList == null) {
             JOptionPane.showMessageDialog(null, "测试用例集生成失败！", "提示",JOptionPane.INFORMATION_MESSAGE);
             return;
        }
      
       String resultStr = "";
       int i = 1;
       for(String result: resultList) {
           resultStr += "第 " + i++ + "  个测试用例：  " + result + "\n";
       }
       resultStr += "共计： " + resultList.size() + " 个测试用例";
       jtResult.setText(resultStr);
        jTabbedPane1.setSelectedIndex(2);
        JOptionPane.showMessageDialog(null, "测试用例集生成成功！", "提示",JOptionPane.INFORMATION_MESSAGE);
        }
        catch (Exception e) {
             JOptionPane.showMessageDialog(null, "测试用例集生成失败！", "提示",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jbOK1ActionPerformed

    private void jbReset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbReset1ActionPerformed
        // TODO add your handling code here:
        jtParamName.setText("");
        jtParamVals.setText("");
        jtTotalParams.setText("");
    }//GEN-LAST:event_jbReset1ActionPerformed

    private JFileChooser fc; //定义引入选择文件类
    private void jmExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmExitActionPerformed
        // TODO add your handling code here:
        int res = JOptionPane.showConfirmDialog(this,"真的要退出吗","退出程序",JOptionPane.YES_NO_OPTION);
        if(res == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_jmExitActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        // TODO add your handling code here:
       HelpFrame hf = new HelpFrame();
       hf.show();
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jmInportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmInportActionPerformed
        // TODO add your handling code here:
         fc = new JFileChooser();
            fc.setDialogTitle("");
            int flag =  fc.showOpenDialog(this);
            if(JFileChooser.APPROVE_OPTION == flag) {
                 String dataFilePath = fc.getSelectedFile().getAbsolutePath();
                if(!dataFilePath.contains(".txt")) {
                    JOptionPane.showMessageDialog(null, "应导入.txt类型数据文件", "提示",JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
                
                try{
                    String encoding = "GBK";
                    BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(fc.getSelectedFile()), encoding));

                    String line = br.readLine();//定义逐行读取数据
                    jtTotalParams.setText("");
                    while(line != null && !line.trim().equals("")) {
                        //判断导入的数据是否格式正确,对数据的处理必然有格式
                        String S1[] = line.split(":");
                        String S2[] = line.split("：");
                        if(line.split(":").length <= 1 && line.split("：").length <= 1) {
                            JOptionPane.showMessageDialog(null, "数据格式不正确", "提示",JOptionPane.INFORMATION_MESSAGE); 
                            return;
                        }
                       
                         if(!jtTotalParams.getText().trim().equals("")) {
                             jtTotalParams.setText(jtTotalParams.getText().trim() + "\n" + line);
                          }
                         else {
                              jtTotalParams.setText(line);
                          }
                        line = br.readLine();
                    }
                }
                catch(Exception e) {
                   JOptionPane.showMessageDialog(null, "操作异常", "提示",JOptionPane.INFORMATION_MESSAGE); 
                }
                JOptionPane.showMessageDialog(null, "文件导入功", "提示",JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            JOptionPane.showMessageDialog(null, "文件导入失败", "提示",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jmInportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbAdd;
    private javax.swing.JButton jbNext1;
    private javax.swing.JButton jbOK1;
    private javax.swing.JButton jbOutput;
    private javax.swing.JButton jbReset1;
    private javax.swing.JButton jbReset2;
    private javax.swing.JMenuItem jmExit;
    private javax.swing.JMenuItem jmInport;
    private javax.swing.JTextField jtCrossRatio;
    private javax.swing.JTextField jtJudgeTimes;
    private javax.swing.JTextField jtMatuteRatio;
    private javax.swing.JTextField jtMaxTimes;
    private javax.swing.JTextField jtParamName;
    private javax.swing.JTextField jtParamVals;
    private javax.swing.JTextField jtPopSize;
    private javax.swing.JTextArea jtResult;
    private javax.swing.JTextArea jtTotalParams;
    // End of variables declaration//GEN-END:variables
}
